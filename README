Library dtree
=============

The library can be used to read information about devices that is
located in _device tree_ structure. In Linux this is usually placed
at `/proc/device-tree`. Device tree is available in embedded devices.


Tutorial
--------

The public API of the library is located in `dtree.h`. It contains a lot of
documentation that should be up to date. The API consists of several functions
to access the tree. Currently there is only one implementation of that API:
`dtree_procfs.c` that is used to parse the directory structure of `/proc/device-tree`.

The core of the library is structure `dtree_dev_t`. It contains the information
about the device. Currently it offers these properties:

* `name` - name of the device
* `base` - base address of the device
* `high` - highest address of the device (not mandatory, can be set to be <= `base`, if not available)
* `compat` - array of compatible device types (finished with NULL)

### Look up a device

	struct dtree_t *dt = NULL;
	int err = dtree_open("/proc/device-tree", &dt);
	die_on_error(err);

	struct dtree_dev_t *eth = dtree_byname(dt, "ethernet");
	if(eth == 0)
		die_no_ethernet();

	process_eth(eth);
	dtree_dev_free(eth);

	dtree_reset(dt);
	dtree_close(dt);

Note call to `dtree_dev_free()` after the device information
is not used anymore.


### List available devices

	struct dtree_t *dt = NULL;
	int err = dtree_open("/proc/device-tree", &dt);
	die_on_error(err);

	struct dtree_dev_t *dev = NULL;
	while((dev = dtree_next(dt)) != NULL) {
		process_dev(dev);
		dtree_dev_free(dev);
	}

	dtree_reset(dt);
	dtree_close(dt);

### Search again with reset

	// declarations, open dtree...
	
	eth = dtree_byname(dt, "ethernet");
	dtree_reset(dt);
	serial = dtree_byname(dt, "serial");

	process(eth, serial);
	dtree_dev_free(eth);
	dtree_dev_free(serial);

	// go on and finally close dtree...


### Error handling

	// declarations...

	if(dtree_open(DT_PATH, &dt) != 0) {
		die(dtree_errstr());
	}

	eth = dtree_byname(dt, "ethernet");
	if(eth == NULL) {
		if(dtree_iserror(dt))
			die(dtree_errstr(dt));
		else
			die("Ethernet device is not present in the system");
	}

	dtree_reset(dt);
	dtree_close(dt);


Testing
-------

Testing of the library is done in `test/` directory. There are few simple tests based
on fake `device-tree` directory structure.
